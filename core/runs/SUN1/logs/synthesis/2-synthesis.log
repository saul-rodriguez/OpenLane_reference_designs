
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.12+45 (git sha1 UNKNOWN, gcc 8.3.1 -fPIC -Os)

[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `exec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.

1. Executing Verilog-2005 frontend: /openlane/designs/core/src/counter.v
Parsing Verilog input from `/openlane/designs/core/src/counter.v' to AST representation.
Generating RTLIL representation for module `\counter'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: /openlane/designs/core/src/core.v
Parsing Verilog input from `/openlane/designs/core/src/core.v' to AST representation.
Generating RTLIL representation for module `\core'.
Successfully finished Verilog frontend.

3. Generating Graphviz representation of design.
Writing dot description to `/openlane/designs/core/runs/SUN1/tmp/synthesis/hierarchy.dot'.
Dumping module core to page 1.

4. Executing HIERARCHY pass (managing design hierarchy).

4.1. Analyzing design hierarchy..
Top module:  \core

4.2. Analyzing design hierarchy..
Top module:  \core
Removed 0 unused modules.

5. Printing statistics.

=== core ===

   Number of wires:                  8
   Number of wire bits:             14
   Number of public wires:           8
   Number of public wire bits:      14
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2
     counter                         2

6. Executing SPLITNETS pass (splitting up multi-bit signals).

7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \core..

8. Executing CHECK pass (checking for obvious problems).
Checking module core...
Found and reported 0 problems.

9. Printing statistics.

=== core ===

   Number of wires:                 11
   Number of wire bits:             14
   Number of public wires:          11
   Number of public wire bits:      14
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2
     counter                         2

   Area for cell type \counter is unknown!

10. Executing Verilog backend.
Dumping module `\core'.

End of script. Logfile hash: 775457fcad, CPU: user 0.11s system 0.01s, MEM: 25.70 MB peak
Yosys 0.12+45 (git sha1 UNKNOWN, gcc 8.3.1 -fPIC -Os)
Time spent: 97% 2x stat (0 sec), 1% 2x write_verilog (0 sec), ...
